stages:
  - lint
  - test
  - build
  - image
  - push

variables:
  REPO: "https://github.com/ev-smoke/telebot-go"
  BRANCH: "main"
  OS: "linux"
  ARCH: "amd64"
  SKIP_LINT: "false"
  SKIP_TESTS: "false"

default:
  image: golang:1.22
  before_script:
    - echo "Target OS: $OS"
    - echo "Target ARCH: $ARCH"
    - go version
    - uname -a

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .cache/go-build
    - ~/go/pkg/mod

lint:
  stage: lint
  script:
    - |
      if [ "$SKIP_LINT" != "true" ]; then
        echo ">>> Run linter"
        make lint
      else
        echo ">>> Skipping lint"
      fi

test:
  stage: test
  script:
    - |
      if [ "$SKIP_TESTS" != "true" ]; then
        echo ">>> Run tests"
        make test
      else
        echo ">>> Skipping tests"
      fi

build:
  stage: build
  script:
    - echo ">>> Building binary for $OS/$ARCH"
    - make build OS=$OS ARCH=$ARCH
  artifacts:
    paths:
      - bin/
    expire_in: 1 hour

image:
  stage: image
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo ">>> Build Docker image"
    - make image
  dependencies:
    - build

push:
  stage: push
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo ">>> Login to Docker registry"
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin
    - echo ">>> Push Docker image"
    - make push
  only:
    - main
